WordPredictor
========================================================
author: Gary Stocks
font-import: http://fonts.googleapis.com/css?family=Risque
font-family: 'Risque'
date: 7 November 2018
transition: rotate
autosize: true

Overview
========================================================
The objective of this model is to predict the next word from a sequence of words typed by a user. This can improve the usability of software applications which involve a lot of typing or smaller-sized interfaces where typing is difficult, such as those found on mobile devices.

This presentation describes how the data was prepared and used to build an algorithm to predict the next word. The interactive Shiny app with the prediction model has been published [here](add Shiny app URL).

A set of text documents from twitter, news feeds and blogs was used to train the model. This data was provided by SwiftKey. An algorithm was built based on a Markov n-gram model with Stupid Back-off. A 6-gram model was settled on after testing various models.

Next Word Prediction Algorithm
========================================================
The user first enters a series of words and then selects the *submit* button to return the top 3 next word predictions, in order of likelihood.

The likelihood of each word is determined using a stupid backoff algorithm. This works by searching for 6-grams which start with the last 5 (if there are at least 5) words of the user's phrase and calculating a score. The score is determined by the observed frequency of each 6-gram and the total number of 6-grams observed. Then the last 4 words are used to find 5-grams which start with that word sequence. The score for each 5-gram is determined and weighted by 0.7. This process continues until arriving at unigrams.

Prediction Algorithm Performance
========================================================
Summarise the performance of the prediction algorithm.

How to Use the Shiny App
========================================================
To use the app, navigate [here](add Shiny app URL) and enter a phrase in the text input box. Click *submit*. The app will return the top 3 most likely words to follow the phrase entered, in order from most likely to least likely.

(Include an image of the app)


Slide With Code
========================================================

```{r}
summary(cars)
```

Slide With Plot
========================================================

```{r, echo=FALSE}
plot(cars)
```
